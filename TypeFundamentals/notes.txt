Primitive Types
---------------

Any type the compiler directly supports.
The compiler is able to cast primitive types implicity and explicitly.
Implicit casts are "safe" becuase they do not result in data loss.
Primitive types can be written as literals. A literal is an instace of the type itself.

Overflow Checking
-----------------

C# compiler has overflow checking off by default.
Decimal is not a CLR primitive type.
	There are no overflow specific IL instructions.
	The checked and unchecked operators have no effect.

Value Types
-----------

Value types derive from System.Object > System.ValueType.
Value types are sealed.
Value types should be immutable.
Value types should be small (16 bytes or less) to reduce memory overhead when passing by value.